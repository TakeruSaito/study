#write.table(t(AandB[-1,]), file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/HyperParameters.csv", append = TRUE, quote = FALSE,sep = ",")
options(scipen=5);return (ret[1]  - error)
}
CalcPriMH <- function(pbl, checkData, type = "multi", mode = "default"){
# pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
alpha <- CalcAlpha(pbl)
pbl <- Choice(pbl)
factor <- abs(CalcCoeff(pbl, type))
if(mode == "debug"){
write.table(rownames(checkData), file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/Factors.csv", append = TRUE, quote = FALSE,sep = ",")
write.table(factor, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/Factors.csv", append = TRUE, quote = FALSE,sep = ",")
}
predict <- CalcBeta(pbl, alpha, factor)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * factor[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- alpha [2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, alpha[2], checkData$FPTrial, predict[2], sigma)
return(ret)
}
CalcManHour(PBLData.dummy, 1)
CalcPriMH <- function(pbl, checkData, type = "multi", mode = "default"){
# pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
alpha <- CalcAlpha(pbl)
pbl <- Choice(pbl)
factor <- abs(CalcCoeff(pbl, type))
if(mode == "debug"){
write.table(rownames(checkData), file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/Factors.csv", append = TRUE, quote = FALSE,sep = ",")
write.table(t(factor), file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/Factors.csv", append = TRUE, quote = FALSE,sep = ",")
}
predict <- CalcBeta(pbl, alpha, factor)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * factor[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- alpha [2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, alpha[2], checkData$FPTrial, predict[2], sigma)
return(ret)
}
CalcManHour(PBLData.dummy, 1)
CalcManHour <- function(PBL,i, type = "multi"){
#  error <- MakeModel(PBL[-length(PBL[,1]),])
error <- MakeModel(PBL, type)
SortedData <- Choice(PBL)
multico <- Multico(SortedData) #多重線形性を排除する
#  ret <- StepFiveMulti(multico[-length(PBL[,1]),],multico[length(PBL[,1]),])
num <- as.integer(names(error))+4
Study <- multico[-(i),1:num];
Est <- multico[i, 1:num];
ret <-  CalcPriMH(Study, Est, type, mode = "debug");
names(ret) <- c("Estimate", "Actual","Error" , "Alfa", "FPTrial", "predict", "Sigma");
AandB <- 0
AandB <- rbind(AandB, ret)
#writeLines(paste(i), "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/HyperParameters.csv")
#write.table(t(AandB[-1,]), file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/HyperParameters.csv", append = TRUE, quote = FALSE,sep = ",")
options(scipen=5);return (ret[1]  - error)
}
CalcTestData(PBLData.dummy)
save.image("2015Model.RData")
ls()
PBLData
PBLData[1,]
PBLData[,1]
PBLData[1]
PBLData[,1]
PBLData[1,]
PBLData.dummy[1,]
View(data)
MakeDummy <- function(RawPBLData){
library(caret)
library(ggplot2)
tmp <- dummyVars(~., data=RawPBLData)
PBLData.dummy <- as.data.frame(predict(tmp, RawPBLData))
return(PBLData.dummy)
}
MakeDummy(PBLData)[1,]
MakeDummy(PBLData)[1,5]
label(MakeDummy(PBLData)[1,5])
labels(PBLData.dummy)
labels(PBLData.dummy[,5])
labels(PBLData.dummy)[5]
labels(PBLData.dummy)
labels(PBLData.dummy)[[2]]
labels(PBLData.dummy)[[2,5]]
labels(PBLData.dummy)[[2]][5]
PBLData.dummy[1,]
write.csv(PBLData.dummy[1,], file = "data/test.csv", quote = "FALSE", raw.names = "FALSE")
write.csv(PBLData.dummy[1,], file = "data/test.csv", quote = "FALSE", row.names = "FALSE")
write.csv(PBLData.dummy[1,], file = "data/test.csv", quote = FALSE, row.names = FALSE)
write.csv(list(PBLData.dummy[1,1], PBLData.dummy[1,]), file = "data/test.csv", quote = FALSE, row.names = FALSE)
PBLData.dummy[1,1]
labels(PBLData.dummy[1,1])
labels(PBLData.dummy[,1])
labels(PBLData.dummy[1,])
write.csv(list( labels(PBLData.dummy[1,])[[1]][1], PBLData.dummy[1,]), file = "data/test.csv", quote = FALSE, row.names = FALSE)
list( labels(PBLData.dummy[,1])[[1]][1], "This is test", PBLData.dummy[1,])
list(label = labels(PBLData.dummy[,1])[[1]][1], string = "This is test", data= PBLData.dummy[1,])
labels(PBLData.dummy[,1])[[1]][1]
labels(PBLData.dummy[,1])[[2]][1]
labels(PBLData.dummy[,1])[[2]]
labels(PBLData.dummy[,1])[[1]]
labels(PBLData.dummy[,1])
labels(PBLData.dummy[1,])
labels(PBLData.dummy[1,])[[`]]
}
`
label(PBLData.dummy[1,])
labels(PBLData.dummy[1,])[[1]][1]
list(label = labels(PBLData.dummy[1,])[[1]][1], string = "This is test", data= PBLData.dummy[1,])
labels(PBLData)[[2]][1]
CalcRelativeError(PBLData.dummy$Actual, PBLData.dummy$Estimated)
(CalcRelativeError(PBLData.dummy$Actual, abs(PBLData.dummy$Estimated))
)
mean(CalcRelativeError(PBLData.dummy$Actual, abs(PBLData.dummy$Estimated)))
RMSE(PBLData.dummy$Actual, result)
result
RMSE(PBLData.dummy$Actual, PBLData.dummy$Estimated)
RMS <- function(data){
return( mean(sqrt(data^2)) )
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
for(i in pala.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -1])
result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name, rmse = result.rmse, relative_error = result.rrmse, results = result.data), file = "data/test.csv", quote = FALSE, row.names = FALSE)
}
return(0);
}
#生データをダミー変数化させるメソッド
MakeDummy <- function(RawPBLData){
library(caret)
library(ggplot2)
tmp <- dummyVars(~., data=RawPBLData)
PBLData.dummy <- as.data.frame(predict(tmp, RawPBLData))
return(PBLData.dummy)
}
RMS <- function(data){
return( mean(sqrt(data^2)) )
}
save.image("2015Model.RData")
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
write.csv("", file = "data/test.csv", quote = FALSE, row.names = FALSE)
for(i in pala.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -1])
result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name, rmse = result.rmse, relative_error = result.rrmse, results = result.data), file = "data/test.csv", append = TRUE, quote = FALSE, row.names = FALSE)
}
return(0);
}
View(MakeModel)
View(data)
rm("AandB")
c
rm("c")
D
rm("D")
rm("factor")
i
rm("i")
label
rm("label")
m
rm("m")
m1
rm("m1")
m2
rm("m2")
metInfl
metInfl1
rm("metInfl1")
metSort
rm("metSort")
multi
rm(multi)
name
rm("name")
newModel
rm("newModel")
newSort
rm("newSort")
RelaError
rm("RelaError")
result
sigma
rm("sigma")
ls
ls()
sort
rm("sort")
ls
ls()
resuto
result
testChoice
rm("testChoice")
two
rm("two")
ls
ls()
a
rm("a")
b
rm("b")
d
rm("d")
ls
ls()
Data
rm("Data")
metInfl
rm("metInfl")
,s
ls()
SortedData
PBLData[1,]
read.csv("../../../EstimationData/data/2016_7SourceCode.csv")
read.csv("../../../EstimationData/data/2016_7SourceCode.csv")
read.csv("../../../EstimationData/data/2016_7SourceCode.csv", row.names = 1)
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in pala.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -1])
result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name, rmse = result.rmse, relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
}
return(0);
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in pala.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -1])
result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name, rmse = result.rmse, relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
}
return(0);
}
save.image("2015Model.RData")
SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-25.csv")
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -1])
result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name, rmse = result.rmse, relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
}
return(0);
}
SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-25.csv")
q
PBLData.dummy
PBLData.dummy
SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-25.csv")
ls()
browser()
ls()
SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-25.csv")
ls()
method
Rank()
use
x
y
SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-25.csv")
Choice(PBLData.dummy)
CalcTestData(PBLData.dummy)
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name, rmse = result.rmse, relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
}
return(0);
}
save.image("2015Model.RData")
SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-25.csv")
rmsE(10, 30)
RMSE(10, 20)
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name,  relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
}
return(0);
}
save.image("2015Model.RData")
system.time(SearchProbPoint(PBLData = PBLData.dummy, "data/2016-10-26.csv"))
system.time(SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-26.csv"))
CalcTestData <- function(PBLData, type = "multi"){
ret <- 0
for(i in 1:length(PBLData[,1])){
ret <- rbind(ret , CalcManHour(PBLData, i, type) )
#    cat( "loop : ", i, "?n")
}
ret <- ret[-1]
return(ret)
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 7#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name,  relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
cat("loop:", i, "\n");
}
return(0);
}
system.time(SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-26.csv"))
CalcTestData <- function(PBLData, type = "multi"){
ret <- 0
cat("CalcTestData : ")
for(i in 1:length(PBLData[,1])){
ret <- rbind(ret , CalcManHour(PBLData, i, type) )
cat(i , ",")
}
ret <- ret[-1]
cat("\n");
return(ret)
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 6#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.csv(list(target = palam.name,  relative_error = result.rrmse, results = result.data), file = filename, append = TRUE, quote = FALSE, row.names = FALSE)
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
system.time(SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-26.csv"))
PBLData.dummy[,5]
PBLData.dummy[5]
PBLData.dummy[6]
write.csv("This is test", file = "../2015-10-26.csv", append = TRUE, quote = FALSE, row.names = FALSE)
write.csv("This is test", file = "../2015-10-26.csv", append = T, quote = F, row.names = F)
write.csv("Test", file = "data/2015-10-26.csv", append = TRUE, quote = FALSE, row.names = FALSE)
write.csv("Test", file = "data/2015-10-26.csv", append = TRUE, quote = FALSE, row.names = FALSE)
write.csv("Test 1", file = "data/2015-10-26.csv", append = TRUE, quote = FALSE, row.names = FALSE)
write.table("Test 1", file = "data/2016-10-26.csv", sep = ",", append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
write.table("Test 2", file = "data/2016-10-26.csv", sep = ",", append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 6#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.table(list(target = palam.name,  relative_error = result.rrmse, results = result.data), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE)
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
save.image("2015Model.RData")
CalcTestData <- function(PBLData, type = "multi"){
ret <- 0
cat("CalcTestData : ")
for(i in 1:length(PBLData[,1])){
ret <- rbind(ret , CalcManHour(PBLData, i, type) )
cat(i, ", ")
}
ret <- ret[-1]
cat("\n");
return(ret)
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 5#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.data), results_median = median(result.data) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE)
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
PBLData$Actual
PBLData.dummy$Estimated - PBLData.dummy$Actual
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 5#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
result.errors <- result.data - PBLData$Actual
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
if(i == palam.first){
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE)
}else{
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
}
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 6#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
result.errors <- result.data - PBLData$Actual
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
if(i == palam.first){
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE)
}else{
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
}
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
system.time(SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-26.csv"))
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.num <- 6#length(PBLData[1,])
palam.first <- 5
write.csv("", file = filename, quote = FALSE, row.names = FALSE, col.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
result.errors <- result.data - PBLData$Actual
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
if(i == palam.first){
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE)
}else{
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
}
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
SearchProbPoint <- function(PBLData, type = "multi", filename){
palam.first <- 5
palam.num <- length(PBLData[1,])
write.csv("", file = filename, quote = FALSE, row.names = FALSE, col.names = FALSE)
for(i in palam.first:palam.num){
palam.name <- labels(PBLData)[[2]][i]
result.data <- CalcTestData(PBLData[, -i])
result.errors <- result.data - PBLData$Actual
#   result.rmse <- RMSE(result.data, PBLData$Actual)
result.rrmse <- RMS(CalcRelativeError(PBLData$Actual, result.data))
if(i == palam.first){
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE)
}else{
write.table(list(target = palam.name,  relative_error = result.rrmse, results_mean = mean(result.errors), results_median = median(result.errors) ), file = filename, sep = ",",append = TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)
}
cat("SearchProbPoint:", i, "\n");
}
return(0);
}
system.time(SearchProbPoint(PBLData = PBLData.dummy, filename = "data/2016-10-26.csv"))
save.image("2015Model.RData")
