FactMulCoeff <- c(FactMulCoeff, c(data[,i] * abs(kaiki[i - 4, 2])))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
StepFourCor <- function(data, TriAlfa, soukan){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * soukan[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
#５．クロスバリデーションで推定精度を算出する。
#Rでのクロスバリデーションのメソッドはあるようだが、使い方がわからんので、最悪手打ちで
StepFive <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- abs(StepThree(pbl))
predict <- StepFour(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4, 2]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
#  sig <- matrix(FactMulCoeff, length(pbl[,1]), (length(pbl[1,]) - 4))
#  sigma <- 0
#  for(i in 1:length(sig[1,])){
#    sigma <- sigma + sig[,i]
#  }
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
StepFiveCor <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
soukan <- StepThreeCor(pbl)
predict <- StepFourCor(pbl, TriAlfa, soukan)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * soukan[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
m <- 0
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
#3．で単回帰分析ではなく，重回帰分析をした場合
StepThreeMulti <- function(SelectedData){
# kaiki <- 0
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data2 <- SelectedData
data2[is.na(data2)] <- 0
print("StepThree")
kaiki <- lm((data2$Actual - data2$Estimated)~., data2[-1:-4])$Coeff
#kaiki[is.na(kaiki)] <- 0
return(invisible(kaiki))
}
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
print("StepFour")
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
print("StepFive")
return(invisible(ret))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
#3．で単回帰分析ではなく，重回帰分析をした場合
StepThreeMulti <- function(SelectedData){
# kaiki <- 0
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data2 <- SelectedData
data2[is.na(data2)] <- 0
kaiki <- lm((data2$Actual - data2$Estimated)~., data2[-1:-4])$Coeff
#kaiki[is.na(kaiki)] <- 0
return(invisible(kaiki))
}
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
print(x)
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
print(rightFormula)
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
print(TriAlfa[2])
print(data$FPTrial)
print(sigma)
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
print(sigma)
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
print(sig)
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
print(FactMulCoeff)
print(data)
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
print(FactMulCoeff)
#print(data)
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
print(data[,i])
kaiki[i - 4]
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
print(data[,i])
#kaiki[i - 4]
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
#print(data[,i])
print(kaiki[i - 4])
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepFourMulti <- function(data, TriAlfa, kaiki){
print(kaiki)
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
StepThreeMulti <- function(SelectedData){
# kaiki <- 0
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data2 <- SelectedData
data2[is.na(data2)] <- 0
kaiki <- lm((data2$Actual - data2$Estimated)~., data2[-1:-4])$coeff
kaiki[is.na(kaiki)] <- 0
print(kaiki)
return(invisible(kaiki))
}
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
StepThreeMulti <- function(SelectedData){
# kaiki <- 0
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data2 <- SelectedData
data2[is.na(data2)] <- 0
kaiki <- lm((data2$Actual - data2$Estimated)~., data2[-1:-4])$coeff
kaiki[is.na(kaiki)] <- 0
return(invisible(kaiki))
}
m <- 0
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
StepFourMulti <- function(data, TriAlfa, kaiki){
FactMulCoeff <- 0
for(i in 5:length(data)){ #このdataは多重線形性を排除した工数等込のプロジェクトデータ
FactMulCoeff <- c(FactMulCoeff, c(data[,i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sig <- matrix(FactMulCoeff, length(data[,1]), (length(data[1,]) - 4))
sigma <- 0
for(i in 1:length(sig[1,])){
sigma <- sigma + sig[,i]
}
leftFormula <- data$Actual - (TriAlfa[2] * data$FPTrial)
rightFormula <- TriAlfa[2] * data$FPTrial * sigma
x <- data.frame(LEFT=leftFormula, RIGHT=rightFormula);
return( invisible(lm(leftFormula~rightFormula, data=x)$coeff ))
}
m <- 0
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
m
warnings()
StepThreeMulti <- function(SelectedData){
# kaiki <- 0
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data2 <- SelectedData
data2[is.na(data2)] <- 0
kaiki <- lm.beta(lm((data2$Actual - data2$Estimated)~., data2[-1:-4]))
kaiki[is.na(kaiki)] <- 0
return(invisible(kaiki))
}
m <- 0
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m <- rbind(m , CalcManHour(PBLData,i))
}
m <- m[-1]
m
save.image("2015Model.RData")
