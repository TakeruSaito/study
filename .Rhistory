m1
m1 <- 0
for(i in 1:length(PBLData[,1])){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m1 <- rbind(m1 , CalcManHour(PBLData,i))
}
m1 <- m1[-1]
m1
save.image("2015Model.RData")
ls()
m1
RelaError
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
kmeans(na.omit(RelaError), 2)$cluster
save.image("2015Model.RData")
ls()
m
subset(PBLData, Actual <= 500)
PBLData[1,]
PBLData[,1]
subset(PBLData, Actual <= 100)
PBLData[,2]
median(PBLData[,2])
length(subset(PBLData, Actual >= 200)[,1] )
m2 <- 0
for(i in 1:length(subset(PBLData, Actual >= 200)[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual >= 200), i) )
}
m2 <- m2[-1]
m2
CalcRelativeError <- function(experiment, calculated){
return ( ((experiment - calculated) / calculated) * 100 )
}
CalcRelativeError(subset(PBLData, Actual >= 200), m2)
CalcRelativeError(subset(PBLData, Actual >= 200)[,2], m2)
m2
m1
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200)[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200), i) )
}
m2 <- m2[-1]
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
MakeModel <- function(PBL){
SortedData <- Choice(PBL) #工数変動要因を工数誤差との相関係数の高い順にソート
ChoiceCoeff <- ChoiceMKtwo(PBL) #各変動要因の相関係数を代入
multico <- Multico(SortedData) #多重線形性を排除する
#  write.table(ChoiceCoeff, file = "output.txt", append = TRUE, quote = FALSE);
write.csv(ChoiceCoeff, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/MetrixInfluence.csv", quote = FALSE, col.names = FALSE);
write.csv(multico, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/UseMetrix.csv", quote = FALSE, col.names = FALSE)
MeanRes <- 0
MedianRes <- 0
VarRes <- 0
for(i in 6:length(multico)){ #見積もり工数の誤差をresultに代入
result <- CrossMulti(multico[, 1:i])[, 3]
#    MeanRes <- c(MeanRes, mean(result))
MedianRes <- c(MedianRes, median(result))
VarRes <- c(VarRes, sqrt(variance(result)))
}
MeanRes <- MeanRes[-1]
MedianRes <- MedianRes[-1]
VarRes <- VarRes[-1]
Num <- c(2:(length(VarRes)+1))
names(VarRes) <- Num
names(MedianRes) <- Num
VarSort <- order(abs(VarRes))
VarRes <- VarRes[VarSort]
lim <- 0
for(i in 1:length(VarRes)){
cat(VarRes)
if(VarRes[i] <= 500){ lim <- i }
}
MedianSort <- VarSort[1:lim]
MedianRes <- MedianRes[MedianSort]
MedianSort <- order(abs(MedianRes))
MedianRes <- MedianRes[MedianSort]
return (MedianRes[1])
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
MakeModel <- function(PBL){
SortedData <- Choice(PBL) #工数変動要因を工数誤差との相関係数の高い順にソート
ChoiceCoeff <- ChoiceMKtwo(PBL) #各変動要因の相関係数を代入
multico <- Multico(SortedData) #多重線形性を排除する
#  write.table(ChoiceCoeff, file = "output.txt", append = TRUE, quote = FALSE);
write.csv(ChoiceCoeff, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/MetrixInfluence.csv", quote = FALSE, col.names = FALSE);
write.csv(multico, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/UseMetrix.csv", quote = FALSE, col.names = FALSE)
MeanRes <- 0
MedianRes <- 0
VarRes <- 0
for(i in 6:length(multico)){ #見積もり工数の誤差をresultに代入
result <- CrossMulti(multico[, 1:i])[, 3]
cat(result)
#    MeanRes <- c(MeanRes, mean(result))
MedianRes <- c(MedianRes, median(result))
VarRes <- c(VarRes, sqrt(variance(result)))
}
MeanRes <- MeanRes[-1]
MedianRes <- MedianRes[-1]
VarRes <- VarRes[-1]
Num <- c(2:(length(VarRes)+1))
names(VarRes) <- Num
names(MedianRes) <- Num
VarSort <- order(abs(VarRes))
VarRes <- VarRes[VarSort]
lim <- 0
for(i in 1:length(VarRes)){
cat(VarRes)
if(VarRes[i] <= 500){ lim <- i }
}
MedianSort <- VarSort[1:lim]
MedianRes <- MedianRes[MedianSort]
MedianSort <- order(abs(MedianRes))
MedianRes <- MedianRes[MedianSort]
return (MedianRes[1])
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
CrossMulti <- function(pblData){ #pblDataは多重線形性排除済みの全プロジェクトデータ
　　ret <- 0;
for(i in 1:length(pblData[,1])){
Study <- pblData[-(i),];
Est <- pblData[i, ];
ret <-  rbind(ret, StepFiveMulti(Study, Est));
}
ret <- ret[-1,]
cat(ret)
return(ret)
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
MakeModel <- function(PBL){
SortedData <- Choice(PBL) #工数変動要因を工数誤差との相関係数の高い順にソート
ChoiceCoeff <- ChoiceMKtwo(PBL) #各変動要因の相関係数を代入
multico <- Multico(SortedData) #多重線形性を排除する
#  write.table(ChoiceCoeff, file = "output.txt", append = TRUE, quote = FALSE);
write.csv(ChoiceCoeff, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/MetrixInfluence.csv", quote = FALSE, col.names = FALSE);
write.csv(multico, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/UseMetrix.csv", quote = FALSE, col.names = FALSE)
MeanRes <- 0
MedianRes <- 0
VarRes <- 0
for(i in 6:length(multico)){ #見積もり工数の誤差をresultに代入
result <- CrossMulti(multico[, 1:i])[, 3]
#    MeanRes <- c(MeanRes, mean(result))
MedianRes <- c(MedianRes, median(result))
VarRes <- c(VarRes, sqrt(variance(result)))
}
MeanRes <- MeanRes[-1]
MedianRes <- MedianRes[-1]
VarRes <- VarRes[-1]
Num <- c(2:(length(VarRes)+1))
names(VarRes) <- Num
names(MedianRes) <- Num
VarSort <- order(abs(VarRes))
VarRes <- VarRes[VarSort]
lim <- 0
for(i in 1:length(VarRes)){
cat(VarRes)
if(VarRes[i] <= 500){ lim <- i }
}
MedianSort <- VarSort[1:lim]
MedianRes <- MedianRes[MedianSort]
MedianSort <- order(abs(MedianRes))
MedianRes <- MedianRes[MedianSort]
return (MedianRes[1])
}
CrossMulti <- function(pblData){ #pblDataは多重線形性排除済みの全プロジェクトデータ
　　ret <- 0;
for(i in 1:length(pblData[,1])){
Study <- pblData[-(i),];
Est <- pblData[i, ];
ret <-  rbind(ret, StepFiveMulti(Study, Est));
}
ret <- ret[-1,]
return(ret)
}
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
cat(ret)
return(invisible(ret))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
cat(ret)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
subset(PBLData, Actual < 200)
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma)
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma, "\n")
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
m2 <- 0
for(i in 1:length(subset(PBLData, Actual >= 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual >= 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
MakeModel <- function(PBL){
SortedData <- Choice(PBL) #工数変動要因を工数誤差との相関係数の高い順にソート
ChoiceCoeff <- ChoiceMKtwo(PBL) #各変動要因の相関係数を代入
multico <- Multico(SortedData) #多重線形性を排除する
#  write.table(ChoiceCoeff, file = "output.txt", append = TRUE, quote = FALSE);
write.csv(ChoiceCoeff, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/MetrixInfluence.csv", quote = FALSE, col.names = FALSE);
write.csv(multico, file = "/Users/saitotakeru/Documents/Study/workspace/work1/SubData/UseMetrix.csv", quote = FALSE, col.names = FALSE)
MeanRes <- 0
MedianRes <- 0
VarRes <- 0
for(i in 6:length(multico)){ #見積もり工数の誤差をresultに代入
result <- CrossMulti(multico[, 1:i])[, 3]
#    MeanRes <- c(MeanRes, mean(result))
MedianRes <- c(MedianRes, median(result))
VarRes <- c(VarRes, sqrt(variance(result)))
}
MeanRes <- MeanRes[-1]
MedianRes <- MedianRes[-1]
VarRes <- VarRes[-1]
Num <- c(2:(length(VarRes)+1))
names(VarRes) <- Num
names(MedianRes) <- Num
VarSort <- order(abs(VarRes))
VarRes <- VarRes[VarSort]
lim <- 0
for(i in 1:length(VarRes)){
if(VarRes[i] <= 500){ lim <- i }
}
MedianSort <- VarSort[1:lim]
MedianRes <- MedianRes[MedianSort]
MedianSort <- order(abs(MedianRes))
MedianRes <- MedianRes[MedianSort]
return (MedianRes[1])
}
StepOne(subset(PBLData, Actual < 2--))
StepOne(subset(PBLData, Actual < 200))
oneTest <- StepOne(subset(PBLData, Actual < 200))
oneTest
rm("oneTest")
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
//cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma, "\n")
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
#cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma, "\n")
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
StepOne <- function(pbl){ #csvの元データそのまま
TriAlfa <- lsfit(pbl$Estimated, pbl$FPTrial)$coeff
AppAlfa <- lsfit(pbl$Estimated, pbl$FPApproxi)$coeff
cat(TriAlfa)
return (invisible(TriAlfa))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual >= 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual >= 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
m2
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
cat(TriAlfa)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
#cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma, "\n")
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
cat("\t: ",TriAlfa, "\n")
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
#cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma, "\n")
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
m2 <- 0
for(i in 1:length(subset(PBLData, Actual < 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual < 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
StepFiveMulti <- function(pbl, checkData){ # pbl:検査対象プロジェクト削除済みかつ多重線形性排除済みの全データ
TriAlfa <- StepOne(pbl)
pbl <- Choice(pbl)
kaiki <- StepThreeMulti(pbl)
predict <- StepFourMulti(pbl, TriAlfa, kaiki)
FactMulCoeff <- 0
for(i in 5:length(pbl)){
FactMulCoeff <- c(FactMulCoeff, c(checkData[i] * kaiki[i - 4]))
}
FactMulCoeff <- FactMulCoeff[-1]
sigma <- 0
for(i in 1:length(FactMulCoeff)){
sigma <- sigma + as.numeric(FactMulCoeff[i])
}
#cat("TriAlfa", TriAlfa[2], ",  predict", predict[2], ", sigma", sigma, "\n")
ret <- TriAlfa[2] * checkData$FPTrial * (1 + predict[2] * sigma)
ret <- abs(ret)
ret <- c(ret, checkData$Actual, ret - checkData$Actual, TriAlfa[2], checkData$FPTrial, predict[2], sigma)
return(invisible(ret))
}
StepOne <- function(pbl){ #csvの元データそのまま
TriAlfa <- lsfit(pbl$Estimated, pbl$FPTrial)$coeff
AppAlfa <- lsfit(pbl$Estimated, pbl$FPApproxi)$coeff
return (invisible(TriAlfa))
}
PBLData
m2
m2 <- 0
for(i in 1:length(subset(PBLData, Actual >= 200|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, Actual >= 200|is.na(Actual)), i) )
}
m2 <- m2[-1]
m2
CalcRelativeError(subset(PBLData, Actual >= 200|is.na(Actual) )[,2], m2)
subset(PBLData, Actual >= 200|is.na(Actual) )[,2]
subset(PBLData, Actual >= 200|is.na(Actual) )[,1]
subset(PBLData, Actual >= 200|is.na(Actual) )
m2 <- 0
for(i in 1:length(subset(PBLData, NewDevelopment == 1|is.na(Actual) )[,1] )){
#  write.table(label[i], file = "output.txt", append = TRUE, quote = FALSE);
m2 <- rbind(m2 , CalcManHour(subset(PBLData, NewDevelopment == 1|is.na(Actual)), i) )
}
m2 <- m2[-1]
CalcRelativeError(subset(PBLData, NewDevelopment == 1|is.na(Actual)), m2)
CalcRelativeError(subset(PBLData, NewDevelopment == 1|is.na(Actual))[,2], m2)
m2
subset(PBLData, NewDevelopment == 1|is.na(Actual))[,2]
subset(PBLData, NewDevelopment == 1|is.na(Actual))
save.image("2015Model.RData")
install.packages("party")
help(pacage="party")
help(package="party")
save.image("2015Model.RData")
