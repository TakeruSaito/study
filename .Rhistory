for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
#        print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
#      print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}print(vect)
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
#        print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
#      print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
#        print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
#      print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}print(vect)
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
#        print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
#      print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + 1)))
}
}
print(vect)
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + k -1)))
print(vect)
}
}
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは工数・規模を除いた、全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data)-5) ){
#    for(j in (i + 1):(length(data) - 1) ){
j <- (i + 1);print("loop")
while(j <= length(data)){
#      x <- abs( cor(data[,i] , data[,j]) );
if(length(data) < (j + 4)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("end")
}else if(((length(data) - j) < 6)){
x <- vif(lm(data[,i] ~ ., data[,j:length(data)]));print("test")
print(x)
break
}else{
x <- vif(lm(data[,i] ~ ., data[,j:(j+4)]));print("middle")
}
print(x)
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + k -1)))
print(vect);print("aaa")
}
}
j <- j + 5
}
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
length(d)
c
a
b
d
Multico(d)
save.image("2015Model.RData")
save.image("2015Model.RData")
