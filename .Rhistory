}
#  return (vect)
return(data)
}
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data) - 3) ){
#    for(j in (i + 1):(length(data) - 1) ){
x <- 0
loop <- floor( (length(data) - i)/3 )
print( length(data) - i )
for(j in 1:loop ){
#      x <- abs( cor(data[,i] , data[,j]) );
if(j >= loop){
x <- c(x,  vif( lm( data[,i] ~ . , data[, (i + (3*j - 2)):length(data)] ) ) )
}else{
x <- c(x,  vif( lm( data[,i] ~ . , data[, i + (3*j - 2):(3*j) ] ) ) )
}
}
x <- x[-1]
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + k -1)))
}
}
print(vect)
}
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data) - 3) ){
#    for(j in (i + 1):(length(data) - 1) ){
x <- 0
loop <- floor( (length(data) - i)/3 )
for(j in 1:loop ){
#      x <- abs( cor(data[,i] , data[,j]) );
if(j >= loop){
x <- c(x,  vif( lm( data[,i] ~ . , data[, (i + (3*j - 2)):length(data)] ) ) )
}else{
x <- c(x,  vif( lm( data[,i] ~ . , data[, i + (3*j - 2):(3*j) ] ) ) )
}
}
x <- x[-1]
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + k -1)))
}
}
}
print(length(vect))
if(length(vect) != 0){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
vect <- 0
for(i in 5:(length(data) - 3) ){
#    for(j in (i + 1):(length(data) - 1) ){
x <- 0
loop <- floor( (length(data) - i)/3 )
for(j in 1:loop ){
#      x <- abs( cor(data[,i] , data[,j]) );
if(j >= loop){
x <- c(x,  vif( lm( data[,i] ~ . , data[, (i + (3*j - 2)):length(data)] ) ) )
}else{
x <- c(x,  vif( lm( data[,i] ~ . , data[, i + (3*j - 2):(3*j) ] ) ) )
}
}
x <- x[-1]
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + k -1)))
}
}
}
if(length(vect) >= 2 ){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
Multico(d)
save.image("2015Model.RData")
save.image("2015Model.RData")
a
b
b[,5]
lm(b[,5] ~ . , b[,])
lm(a[,5] ~ . , a[,5:length(a)])
PrepForVIF <- function(PBLData){
buffer <- PBLata
DeleteIndex<- 0
RegrCoeff <- lm(buffer[5,] ~ . , buffer[,5:length(buffer)])$Coefficients
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
data <- buffer
}
PrepForVIF <- function(PBLData){
buffer <- PBData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[5,] ~ . , buffer[,5:length(buffer)])$Coefficients
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[5,] ~ . , buffer[,5:length(buffer)])$Coefficients
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
return(buffer)
}
PrepForVIF(a)
a[5,]
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$Coefficients
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
return(buffer)
}
a[5,]
PrepForVIF(a)
lm(a[,5] ~ . , a[,5:length(a)])
lm(a[,5] ~ . , a[,5:length(a)])$coeff
lm(a[,5] ~ . , a[,5:length(a)])$Coefficients
is.na(lm(a[,5] ~ . , a[,5:length(a)])$coeff)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
return(buffer)
}
PrepForVIF(a)
length(PrepForVIF(a))
length(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
print(buffer)
return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
print(DeleteIndex)
return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
print(RegrCoeff)
return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
print(RegrCoeff[i])
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
#  return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
print(RegrCoeff)
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff)){
print(RegrCoeff[i])
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
#  return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff[i])){
print(RegrCoeff[i])
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
#  return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff[i])){
DeleteIndex <- c(ts, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
print(DeleteIndex)
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
#  return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff[i])){
DeleteIndex <- c(DeleteIndex, i + 4)
print(DeleteIndex)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
#  return(buffer)
}
PrepForVIF(a)
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff[i])){
DeleteIndex <- c(DeleteIndex, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
#  return(buffer)
}
PrepForVIF <- function(PBLData){
buffer <- PBLData
DeleteIndex<- 0
RegrCoeff <- lm(buffer[,5] ~ . , buffer[,5:length(buffer)])$coeff
for(i in 1:length(RegrCoeff)){
if(is.na(RegrCoeff[i])){
DeleteIndex <- c(DeleteIndex, i + 4)
}
}
DeleteIndex <- DeleteIndex[-1]
if(length(DeleteIndex) != 0){
for(i in length(DeleteIndex):1){
buffer <- buffer[,-DeleteIndex[i]]
}
}
return(buffer)
}
PrepForVIF(a)
Multico <- function(AllFact){
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data <- AllFact  #このAllFactは全調整要因
data[is.na(data)] <- 0
buffer <- data
ts<- 0
for(i in 5:length(data)){
if(sum(data[,i]) == 0){
ts <- c(ts, i)
}
}
ts <- ts[-1]
if(length(ts) != 0){
for(i in length(ts):1){
buffer <- buffer[,-ts[i]]
}
}
data <- buffer
data <- PrepForVIF(data)
vect <- 0
for(i in 5:(length(data) - 3) ){
#    for(j in (i + 1):(length(data) - 1) ){
x <- 0
loop <- floor( (length(data) - i)/3 )
for(j in 1:loop ){
#      x <- abs( cor(data[,i] , data[,j]) );
if(j >= loop){
x <- c(x,  vif( lm( data[,i] ~ . , data[, (i + (3*j - 2)):length(data)] ) ) )
}else{
x <- c(x,  vif( lm( data[,i] ~ . , data[, i + (3*j - 2):(3*j) ] ) ) )
}
}
x <- x[-1]
for(k in 1:length(x)){
if(is.na(x[k]) || x[k] >= 10){
vect <- rbind(vect, c(i,(j + k -1)))
}
}
}
if(length(vect) >= 2 ){
vname <- 0;
for(i in 2:length(vect[1,])){
data[,vect[i,2]] <- 0
}
}
for(i in length(data):5){
if(sum(data[,i]) == 0){
data <- data[,-i]
}
}
#  return (vect)
return(data)
}
save.image("2015Model.RData")
